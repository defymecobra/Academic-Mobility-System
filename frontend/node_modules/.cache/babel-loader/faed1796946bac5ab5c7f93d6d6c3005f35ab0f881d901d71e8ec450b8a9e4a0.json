{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\AcademicMobilitySystem\\\\frontend\\\\src\\\\Context\\\\SystemContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SystemContext = /*#__PURE__*/createContext(null);\nconst SystemContextProvider = props => {\n  _s();\n  const [all_program, setAll_Program] = useState([]);\n  const [profileData, setProfileData] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:4000/allprograms').then(response => response.json()).then(data => setAll_Program(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getprofile', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setProfileData(data));\n    }\n    const storedEmail = localStorage.getItem('user-email');\n    if (storedEmail) {\n      setUserEmail(storedEmail);\n    }\n  }, []);\n  const getTotalProfilePrograms = () => {\n    return;\n  };\n  const updateUserEmail = email => {\n    setUserEmail(email);\n  };\n  const contextValue = {\n    getTotalProfilePrograms,\n    all_program,\n    profileData,\n    updateUserEmail,\n    userEmail\n  };\n  return /*#__PURE__*/_jsxDEV(SystemContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(SystemContextProvider, \"CP208GEa0xZkxc1VvxBcxZuc77g=\");\n_c = SystemContextProvider;\nexport default SystemContextProvider;\nvar _c;\n$RefreshReg$(_c, \"SystemContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","SystemContext","SystemContextProvider","props","_s","all_program","setAll_Program","profileData","setProfileData","userEmail","setUserEmail","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","storedEmail","getTotalProfilePrograms","updateUserEmail","email","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nikita/Desktop/AcademicMobilitySystem/frontend/src/Context/SystemContext.jsx"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\r\n\r\nexport const SystemContext = createContext(null);\r\n\r\nconst SystemContextProvider = (props) => {\r\n    const [all_program, setAll_Program] = useState([]);\r\n    const [profileData, setProfileData] = useState(\"\");\r\n    const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/allprograms')\r\n            .then((response) => response.json())\r\n            .then((data) => setAll_Program(data))\r\n\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getprofile', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/form-data',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: \"\",\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => setProfileData(data));\r\n        }\r\n\r\n        const storedEmail = localStorage.getItem('user-email');\r\n        if (storedEmail) {\r\n            setUserEmail(storedEmail);\r\n        }\r\n    }, [])\r\n\r\n    const getTotalProfilePrograms = () => {\r\n        return ;\r\n    }\r\n\r\n    const updateUserEmail = (email) => {\r\n        setUserEmail(email);\r\n    }\r\n\r\n    const contextValue = {\r\n        getTotalProfilePrograms,\r\n        all_program,\r\n        profileData,\r\n        updateUserEmail,\r\n        userEmail,\r\n    };\r\n\r\n    return (\r\n        <SystemContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </SystemContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default SystemContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAEhD,MAAMM,qBAAqB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKT,cAAc,CAACS,IAAI,CAAC,CAAC;IAEzC,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;MACpCN,KAAK,CAAC,kCAAkC,EAAE;QACtCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,uBAAuB;UAC/B,YAAY,EAAE,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;UACrD,cAAc,EAAE;QACpB,CAAC;QACDI,IAAI,EAAE;MACV,CAAC,CAAC,CACGT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,cAAc,CAACO,IAAI,CAAC,CAAC;IAC7C;IAEA,MAAMO,WAAW,GAAGN,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,IAAIK,WAAW,EAAE;MACbZ,YAAY,CAACY,WAAW,CAAC;IAC7B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IAClC;EACJ,CAAC;EAED,MAAMC,eAAe,GAAIC,KAAK,IAAK;IAC/Bf,YAAY,CAACe,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,YAAY,GAAG;IACjBH,uBAAuB;IACvBlB,WAAW;IACXE,WAAW;IACXiB,eAAe;IACff;EACJ,CAAC;EAED,oBACIT,OAAA,CAACC,aAAa,CAAC0B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACvC1B,KAAK,CAAC0B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAGjC,CAAC;AAAA7B,EAAA,CApDKF,qBAAqB;AAAAgC,EAAA,GAArBhC,qBAAqB;AAsD3B,eAAeA,qBAAqB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}