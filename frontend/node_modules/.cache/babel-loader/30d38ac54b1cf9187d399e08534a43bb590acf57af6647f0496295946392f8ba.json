{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\Academic Mobility System\\\\frontend\\\\src\\\\Pages\\\\LoginSignup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './CSS/LoginSignup.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginSignup = () => {\n  _s();\n  const [state, setState] = useState(\"Login\");\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    email: \"\"\n  });\n  const changeHandler = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateForm = () => {\n    if (state === \"Login\") {\n      if (!formData.email || !formData.password) {\n        alert(\"Email and Password are required!\");\n        return false;\n      }\n    } else {\n      for (const key in formData) {\n        if (!formData[key]) {\n          alert(`Field \"${key.charAt(0).toUpperCase() + key.slice(1)}\" is required!`);\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  const login = async () => {\n    if (!validateForm()) return;\n    console.log(\"Login exec\", formData);\n    let responseData;\n    await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => responseData = data);\n    if (responseData.success) {\n      console.log(\"Login success:\", formData.email);\n      localStorage.setItem('auth-token', responseData.token);\n      localStorage.setItem('user-email', formData.email);\n      window.location.replace(\"/\");\n    } else {\n      alert(responseData.error);\n    }\n  };\n  const signup = async () => {\n    if (!validateForm()) return;\n    console.log(\"Signup exec\", formData);\n    let responseData;\n    await fetch('http://localhost:4000/signup', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => responseData = data);\n    if (responseData.success) {\n      console.log(\"Signup success:\", formData.email);\n      localStorage.setItem('auth-token', responseData.token);\n      localStorage.setItem('user-email', formData.email);\n      window.location.replace(\"/\");\n    } else {\n      alert(responseData.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginsignup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginsignup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginsignup-fields\",\n        children: [state === \"Sign Up\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"firstName\",\n            value: formData.firstName,\n            onChange: changeHandler,\n            type: \"text\",\n            placeholder: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"lastName\",\n            value: formData.lastName,\n            onChange: changeHandler,\n            type: \"text\",\n            placeholder: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: formData.email,\n          onChange: changeHandler,\n          type: \"email\",\n          placeholder: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          value: formData.password,\n          onChange: changeHandler,\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          state === \"Login\" ? login() : signup();\n        },\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), state === \"Sign Up\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loginsignup-login\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setState(\"Login\");\n          },\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 98\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loginsignup-login\",\n        children: [\"Create an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setState(\"Sign Up\");\n          },\n          children: \"Click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginSignup, \"GgFhvnpRy7qI4CUwhnvw9apvhsI=\");\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginSignup","_s","state","setState","formData","setFormData","firstName","lastName","password","email","changeHandler","e","target","name","value","validateForm","alert","key","charAt","toUpperCase","slice","login","console","log","responseData","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","data","success","localStorage","setItem","token","window","location","replace","error","signup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Nikita/Desktop/Academic Mobility System/frontend/src/Pages/LoginSignup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './CSS/LoginSignup.css';\r\n\r\nconst LoginSignup = () => {\r\n    const [state, setState] = useState(\"Login\");\r\n    const [formData, setFormData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\", \r\n        password: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const validateForm = () => {\r\n        if (state === \"Login\") {\r\n            if (!formData.email || !formData.password) {\r\n                alert(\"Email and Password are required!\");\r\n                return false;\r\n            }\r\n        } else {\r\n            for (const key in formData) {\r\n                if (!formData[key]) { \r\n                    alert(`Field \"${key.charAt(0).toUpperCase() + key.slice(1)}\" is required!`);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const login = async () => {\r\n        if (!validateForm()) return; \r\n\r\n        console.log(\"Login exec\", formData);\r\n        let responseData;\r\n        await fetch('http://localhost:4000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => responseData = data);\r\n\r\n        if (responseData.success) {\r\n            console.log(\"Login success:\", formData.email);\r\n            localStorage.setItem('auth-token', responseData.token);\r\n            localStorage.setItem('user-email', formData.email); \r\n            window.location.replace(\"/\");\r\n        } else {\r\n            alert(responseData.error);\r\n        }\r\n    }\r\n\r\n    const signup = async () => {\r\n        if (!validateForm()) return; \r\n\r\n        console.log(\"Signup exec\", formData);\r\n        let responseData;\r\n        await fetch('http://localhost:4000/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => responseData = data);\r\n        \r\n        if (responseData.success) {\r\n            console.log(\"Signup success:\", formData.email);\r\n            localStorage.setItem('auth-token', responseData.token);\r\n            localStorage.setItem('user-email', formData.email);\r\n            window.location.replace(\"/\");\r\n        } else {\r\n            alert(responseData.error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='loginsignup'>\r\n            <div className=\"loginsignup-container\">\r\n                <h1>{state}</h1>\r\n                <div className=\"loginsignup-fields\">\r\n                    {state === \"Sign Up\" ?\r\n                    <>\r\n                        <input name='firstName' value={formData.firstName} onChange={changeHandler} type=\"text\" placeholder=\"First Name\" />\r\n                        <input name='lastName' value={formData.lastName} onChange={changeHandler} type=\"text\" placeholder=\"Last Name\" />\r\n                    </>\r\n                    : null}\r\n                    <input name='email' value={formData.email} onChange={changeHandler} type=\"email\" placeholder=\"Email Address\" />\r\n                    <input name='password' value={formData.password} onChange={changeHandler} type=\"password\" placeholder=\"Password\" />\r\n                </div>\r\n                <button onClick={() => { state === \"Login\" ? login() : signup() }}>Continue</button>\r\n                {state === \"Sign Up\" ? <p className=\"loginsignup-login\">Already have an account? <span onClick={() => { setState(\"Login\") }}>Login here</span></p>\r\n                    : <p className=\"loginsignup-login\">Create an account? <span onClick={() => { setState(\"Sign Up\") }}>Click here</span></p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginSignup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}