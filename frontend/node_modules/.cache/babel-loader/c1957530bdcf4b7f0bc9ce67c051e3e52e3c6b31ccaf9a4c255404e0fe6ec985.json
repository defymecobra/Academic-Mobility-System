{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\Academic Mobility System\\\\frontend\\\\src\\\\Pages\\\\ApplicationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './CSS/ApplicationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationForm = () => {\n  _s();\n  const {\n    programId\n  } = useParams();\n  const [file, setFile] = useState(null);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    university: \"\",\n    program: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    motivationLetter: \"\",\n    status: \"Pending\"\n  });\n  const fileHandler = async e => {\n    const selectedFile = e.target.files[0];\n    const validExtensions = [\"doc\", \"docx\", \"pdf\"];\n    const fileExtension = selectedFile.name.split('.').pop().toLowerCase();\n    if (!validExtensions.includes(fileExtension)) {\n      alert(\"File must be in .doc, .docx, or .pdf format\");\n      return;\n    }\n    setFile(selectedFile);\n    setPreviewFile(selectedFile.name);\n    let responseData;\n    let formDataUpload = new FormData();\n    formDataUpload.append('letter', selectedFile);\n    await fetch('http://localhost:4000/uploadletter', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json'\n      },\n      body: formDataUpload\n    }).then(resp => resp.json()).then(data => responseData = data);\n    if (responseData.success) {\n      setFormData(prev => ({\n        ...prev,\n        motivationLetter: responseData.letter_url\n      }));\n    } else {\n      alert(\"Failed to upload letter\");\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}-${month}-${year}`;\n  };\n  useEffect(() => {\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getprofile', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        setFormData(prev => ({\n          ...prev,\n          firstName: data.firstName,\n          lastName: data.lastName,\n          email: data.email\n        }));\n      }).catch(error => console.error(\"Error fetching user data:\", error));\n    }\n    const fetchProgramName = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/getprogramId/${programId}`);\n        const data = await response.json();\n        if (data.success) {\n          setFormData(prev => ({\n            ...prev,\n            program: data.programName,\n            startDate: data.programStartDate,\n            endDate: data.programEndDate\n          }));\n        } else {\n          alert(\"Program not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching program data:\", error);\n      }\n    };\n    if (programId) {\n      fetchProgramName();\n    }\n  }, [programId]);\n  const apply = async () => {\n    // Phone number validation\n    const phoneRegex = /^\\d{10}$/;\n    if (!phoneRegex.test(formData.phone)) {\n      alert(\"Phone number must contain exactly 10 digits\");\n      return;\n    }\n    for (const key in formData) {\n      if (formData[key] === \"\" || formData[key] === null) {\n        alert(`Field \"${key.charAt(0).toUpperCase() + key.slice(1)}\" is required!`);\n        return;\n      }\n    }\n    let responseData;\n    await fetch('http://localhost:4000/addapplication', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => responseData = data);\n    if (responseData.success) {\n      alert(\"Form successfully submitted!\");\n      window.location.replace(\"/profile\");\n    } else {\n      alert(responseData.error);\n    }\n  };\n  const handleFileSelect = () => {\n    document.getElementById('file-input').click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"application-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"application-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"application-form-title\",\n        children: \"Application Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"application-form-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"application-form-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"firstName\",\n            value: formData.firstName,\n            type: \"text\",\n            readOnly: true,\n            placeholder: \"First Name\",\n            className: formData.firstName ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"lastName\",\n            value: formData.lastName,\n            type: \"text\",\n            readOnly: true,\n            placeholder: \"Last Name\",\n            className: formData.lastName ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            value: formData.email,\n            type: \"email\",\n            readOnly: true,\n            placeholder: \"Email\",\n            className: formData.email ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"phone\",\n            value: formData.phone,\n            onChange: e => setFormData({\n              ...formData,\n              phone: e.target.value\n            }),\n            type: \"text\",\n            placeholder: \"Phone\",\n            className: formData.phone ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"university\",\n            value: formData.university,\n            onChange: e => setFormData({\n              ...formData,\n              university: e.target.value\n            }),\n            type: \"text\",\n            placeholder: \"University\",\n            className: formData.university ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"program\",\n            value: formData.program,\n            type: \"text\",\n            readOnly: true,\n            placeholder: \"Program\",\n            className: formData.program ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"startDate\",\n            value: formatDate(formData.startDate),\n            type: \"text\",\n            readOnly: true,\n            placeholder: \"Start Date\",\n            className: formData.startDate ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"endDate\",\n            value: formatDate(formData.endDate),\n            type: \"text\",\n            readOnly: true,\n            placeholder: \"End Date\",\n            className: formData.endDate ? \"filled\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"application-form-upload\",\n          onClick: handleFileSelect,\n          children: previewFile || \"Click to upload motivational letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-input\",\n          hidden: true,\n          onChange: fileHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"application-form-button\",\n        onClick: apply,\n        children: \"Submit Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"application-form-note\",\n        children: \"All fields are required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(ApplicationForm, \"O+5NqX2KsR8mHGaTsTk851WiY34=\", false, function () {\n  return [useParams];\n});\n_c = ApplicationForm;\nexport default ApplicationForm;\nvar _c;\n$RefreshReg$(_c, \"ApplicationForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ApplicationForm","_s","programId","file","setFile","previewFile","setPreviewFile","formData","setFormData","firstName","lastName","email","phone","university","program","startDate","endDate","motivationLetter","status","fileHandler","e","selectedFile","target","files","validExtensions","fileExtension","name","split","pop","toLowerCase","includes","alert","responseData","formDataUpload","FormData","append","fetch","method","headers","Accept","body","then","resp","json","data","success","prev","letter_url","formatDate","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","localStorage","getItem","response","catch","error","console","fetchProgramName","programName","programStartDate","programEndDate","apply","phoneRegex","test","key","charAt","toUpperCase","slice","JSON","stringify","window","location","replace","handleFileSelect","document","getElementById","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","type","readOnly","placeholder","onChange","onClick","id","hidden","_c","$RefreshReg$"],"sources":["C:/Users/Nikita/Desktop/Academic Mobility System/frontend/src/Pages/ApplicationForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport './CSS/ApplicationForm.css';\r\n\r\nconst ApplicationForm = () => {\r\n    const { programId } = useParams();\r\n    const [file, setFile] = useState(null);\r\n    const [previewFile, setPreviewFile] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        university: \"\",\r\n        program: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        motivationLetter: \"\",\r\n        status: \"Pending\"\r\n    });\r\n\r\n    const fileHandler = async (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        const validExtensions = [\"doc\", \"docx\", \"pdf\"];\r\n        const fileExtension = selectedFile.name.split('.').pop().toLowerCase();\r\n\r\n        if (!validExtensions.includes(fileExtension)) {\r\n            alert(\"File must be in .doc, .docx, or .pdf format\");\r\n            return;\r\n        }\r\n\r\n        setFile(selectedFile);\r\n        setPreviewFile(selectedFile.name);\r\n\r\n        let responseData;\r\n        let formDataUpload = new FormData();\r\n        formDataUpload.append('letter', selectedFile);\r\n\r\n        await fetch('http://localhost:4000/uploadletter', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json'\r\n            },\r\n            body: formDataUpload,\r\n        })\r\n            .then((resp) => resp.json())\r\n            .then((data) => responseData = data);\r\n\r\n        if (responseData.success) {\r\n            setFormData((prev) => ({ ...prev, motivationLetter: responseData.letter_url }));\r\n        } else {\r\n            alert(\"Failed to upload letter\");\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const month = String(date.getMonth() + 1).padStart(2, '0');\r\n        const year = date.getFullYear();\r\n        return `${day}-${month}-${year}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('auth-token')) {\r\n            fetch('http://localhost:4000/getprofile', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    setFormData((prev) => ({\r\n                        ...prev,\r\n                        firstName: data.firstName,\r\n                        lastName: data.lastName,\r\n                        email: data.email\r\n                    }));\r\n                })\r\n                .catch((error) => console.error(\"Error fetching user data:\", error));\r\n        }\r\n\r\n        const fetchProgramName = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:4000/getprogramId/${programId}`);\r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    setFormData((prev) => ({\r\n                        ...prev,\r\n                        program: data.programName,\r\n                        startDate: data.programStartDate,\r\n                        endDate: data.programEndDate\r\n                    }));\r\n                } else {\r\n                    alert(\"Program not found\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching program data:\", error);\r\n            }\r\n        };\r\n\r\n        if (programId) {\r\n            fetchProgramName();\r\n        }\r\n    }, [programId]);\r\n\r\n    const apply = async () => {\r\n        // Phone number validation\r\n        const phoneRegex = /^\\d{10}$/;\r\n        if (!phoneRegex.test(formData.phone)) {\r\n            alert(\"Phone number must contain exactly 10 digits\");\r\n            return;\r\n        }\r\n\r\n        for (const key in formData) {\r\n            if (formData[key] === \"\" || formData[key] === null) {\r\n                alert(`Field \"${key.charAt(0).toUpperCase() + key.slice(1)}\" is required!`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        let responseData;\r\n        await fetch('http://localhost:4000/addapplication', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => responseData = data);\r\n\r\n        if (responseData.success) {\r\n            alert(\"Form successfully submitted!\");\r\n            window.location.replace(\"/profile\");\r\n        } else {\r\n            alert(responseData.error);\r\n        }\r\n    };\r\n\r\n    const handleFileSelect = () => {\r\n        document.getElementById('file-input').click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"application-form\">\r\n            <div className=\"application-form-container\">\r\n                <h1 className=\"application-form-title\">Application Form</h1>\r\n                <div className=\"application-form-fields\">\r\n                    <div className=\"application-form-fields\">\r\n                        <input\r\n                            name=\"firstName\"\r\n                            value={formData.firstName}\r\n                            type=\"text\"\r\n                            readOnly\r\n                            placeholder=\"First Name\"\r\n                            className={formData.firstName ? \"filled\" : \"\"}\r\n                        />\r\n                        <input\r\n                            name=\"lastName\"\r\n                            value={formData.lastName}\r\n                            type=\"text\"\r\n                            readOnly\r\n                            placeholder=\"Last Name\"\r\n                            className={formData.lastName ? \"filled\" : \"\"}\r\n                        />\r\n                        <input\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            type=\"email\"\r\n                            readOnly\r\n                            placeholder=\"Email\"\r\n                            className={formData.email ? \"filled\" : \"\"}\r\n                        />\r\n                        <input\r\n                            name=\"phone\"\r\n                            value={formData.phone}\r\n                            onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n                            type=\"text\"\r\n                            placeholder=\"Phone\"\r\n                            className={formData.phone ? \"filled\" : \"\"}\r\n                        />\r\n                        <input\r\n                            name=\"university\"\r\n                            value={formData.university}\r\n                            onChange={(e) => setFormData({ ...formData, university: e.target.value })}\r\n                            type=\"text\"\r\n                            placeholder=\"University\"\r\n                            className={formData.university ? \"filled\" : \"\"}\r\n                        />\r\n                        <input\r\n                            name=\"program\"\r\n                            value={formData.program}\r\n                            type=\"text\"\r\n                            readOnly\r\n                            placeholder=\"Program\"\r\n                            className={formData.program ? \"filled\" : \"\"}\r\n                        />\r\n                        <input\r\n                            name=\"startDate\"\r\n                            value={formatDate(formData.startDate)}\r\n                            type=\"text\"\r\n                            readOnly\r\n                            placeholder=\"Start Date\"\r\n                            className={formData.startDate ? \"filled\" : \"\"}\r\n                        />\r\n                        <input\r\n                            name=\"endDate\"\r\n                            value={formatDate(formData.endDate)}\r\n                            type=\"text\"\r\n                            readOnly\r\n                            placeholder=\"End Date\"\r\n                            className={formData.endDate ? \"filled\" : \"\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"application-form-upload\" onClick={handleFileSelect}>\r\n                        {previewFile || \"Click to upload motivational letter\"}\r\n                    </div>\r\n                    <input type=\"file\" id=\"file-input\" hidden onChange={fileHandler} />\r\n                </div>\r\n                <button className=\"application-form-button\" onClick={apply}>\r\n                    Submit Application\r\n                </button>\r\n                <p className=\"application-form-note\">All fields are required</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplicationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}